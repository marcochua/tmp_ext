
package com.tooltwist.bsg.clientnz;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.Response;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6b21 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SessionService", targetNamespace = "http://rpdata.com/bsg/schemas")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SessionService {


    /**
     * 
     * @param validateHmacHashRequest
     * @return
     *     returns javax.xml.ws.Response<com.tooltwist.bsg.clientnz.ValidateHmacHashResponse>
     */
    @WebMethod(operationName = "validateHmacHash")
    public Response<ValidateHmacHashResponse> validateHmacHashAsync(
        @WebParam(name = "validateHmacHashRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "validateHmacHashRequest")
        ValidateHmacHashRequest validateHmacHashRequest);

    /**
     * 
     * @param asyncHandler
     * @param validateHmacHashRequest
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "validateHmacHash")
    public Future<?> validateHmacHashAsync(
        @WebParam(name = "validateHmacHashRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "validateHmacHashRequest")
        ValidateHmacHashRequest validateHmacHashRequest,
        @WebParam(name = "validateHmacHashResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<ValidateHmacHashResponse> asyncHandler);

    /**
     * 
     * @param validateHmacHashRequest
     * @return
     *     returns com.tooltwist.bsg.clientnz.ValidateHmacHashResponse
     */
    @WebMethod
    @WebResult(name = "validateHmacHashResponse", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "validateHmacHashResponse")
    public ValidateHmacHashResponse validateHmacHash(
        @WebParam(name = "validateHmacHashRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "validateHmacHashRequest")
        ValidateHmacHashRequest validateHmacHashRequest);

    /**
     * 
     * @param getCredentialsForSessionTokenRequest
     * @return
     *     returns javax.xml.ws.Response<com.tooltwist.bsg.clientnz.GetCredentialsForSessionTokenResponse>
     */
    @WebMethod(operationName = "getCredentialsForSessionToken")
    public Response<GetCredentialsForSessionTokenResponse> getCredentialsForSessionTokenAsync(
        @WebParam(name = "getCredentialsForSessionTokenRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getCredentialsForSessionTokenRequest")
        GetCredentialsForSessionTokenRequest getCredentialsForSessionTokenRequest);

    /**
     * 
     * @param asyncHandler
     * @param getCredentialsForSessionTokenRequest
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getCredentialsForSessionToken")
    public Future<?> getCredentialsForSessionTokenAsync(
        @WebParam(name = "getCredentialsForSessionTokenRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getCredentialsForSessionTokenRequest")
        GetCredentialsForSessionTokenRequest getCredentialsForSessionTokenRequest,
        @WebParam(name = "getCredentialsForSessionTokenResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<GetCredentialsForSessionTokenResponse> asyncHandler);

    /**
     * 
     * @param getCredentialsForSessionTokenRequest
     * @return
     *     returns com.tooltwist.bsg.clientnz.GetCredentialsForSessionTokenResponse
     */
    @WebMethod
    @WebResult(name = "getCredentialsForSessionTokenResponse", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getCredentialsForSessionTokenResponse")
    public GetCredentialsForSessionTokenResponse getCredentialsForSessionToken(
        @WebParam(name = "getCredentialsForSessionTokenRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getCredentialsForSessionTokenRequest")
        GetCredentialsForSessionTokenRequest getCredentialsForSessionTokenRequest);

    /**
     * 
     * @param generateIntegratorAuthTokenRequest
     * @return
     *     returns javax.xml.ws.Response<com.tooltwist.bsg.clientnz.GenerateIntegratorAuthTokenResponse>
     */
    @WebMethod(operationName = "generateIntegratorAuthToken")
    public Response<GenerateIntegratorAuthTokenResponse> generateIntegratorAuthTokenAsync(
        @WebParam(name = "generateIntegratorAuthTokenRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "generateIntegratorAuthTokenRequest")
        GenerateIntegratorAuthTokenRequest generateIntegratorAuthTokenRequest);

    /**
     * 
     * @param asyncHandler
     * @param generateIntegratorAuthTokenRequest
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "generateIntegratorAuthToken")
    public Future<?> generateIntegratorAuthTokenAsync(
        @WebParam(name = "generateIntegratorAuthTokenRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "generateIntegratorAuthTokenRequest")
        GenerateIntegratorAuthTokenRequest generateIntegratorAuthTokenRequest,
        @WebParam(name = "generateIntegratorAuthTokenResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<GenerateIntegratorAuthTokenResponse> asyncHandler);

    /**
     * 
     * @param generateIntegratorAuthTokenRequest
     * @return
     *     returns com.tooltwist.bsg.clientnz.GenerateIntegratorAuthTokenResponse
     */
    @WebMethod
    @WebResult(name = "generateIntegratorAuthTokenResponse", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "generateIntegratorAuthTokenResponse")
    public GenerateIntegratorAuthTokenResponse generateIntegratorAuthToken(
        @WebParam(name = "generateIntegratorAuthTokenRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "generateIntegratorAuthTokenRequest")
        GenerateIntegratorAuthTokenRequest generateIntegratorAuthTokenRequest);

    /**
     * 
     * @param getCustomersForUserRequest
     * @return
     *     returns javax.xml.ws.Response<com.tooltwist.bsg.clientnz.GetCustomersForUserResponse>
     */
    @WebMethod(operationName = "getCustomersForUser")
    public Response<GetCustomersForUserResponse> getCustomersForUserAsync(
        @WebParam(name = "getCustomersForUserRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getCustomersForUserRequest")
        GetCustomersForUserRequest getCustomersForUserRequest);

    /**
     * 
     * @param asyncHandler
     * @param getCustomersForUserRequest
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getCustomersForUser")
    public Future<?> getCustomersForUserAsync(
        @WebParam(name = "getCustomersForUserRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getCustomersForUserRequest")
        GetCustomersForUserRequest getCustomersForUserRequest,
        @WebParam(name = "getCustomersForUserResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<GetCustomersForUserResponse> asyncHandler);

    /**
     * 
     * @param getCustomersForUserRequest
     * @return
     *     returns com.tooltwist.bsg.clientnz.GetCustomersForUserResponse
     */
    @WebMethod
    @WebResult(name = "getCustomersForUserResponse", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getCustomersForUserResponse")
    public GetCustomersForUserResponse getCustomersForUser(
        @WebParam(name = "getCustomersForUserRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getCustomersForUserRequest")
        GetCustomersForUserRequest getCustomersForUserRequest);

}
