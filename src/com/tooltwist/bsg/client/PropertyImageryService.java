
package com.tooltwist.bsg.client;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.Response;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6b21 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PropertyImageryService", targetNamespace = "http://rpdata.com/bsg/schemas")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PropertyImageryService {


    /**
     * 
     * @param getPhotosRequest
     * @return
     *     returns javax.xml.ws.Response<com.tooltwist.bsg.client.GetPhotosResponse>
     */
    @WebMethod(operationName = "getPhotos")
    public Response<GetPhotosResponse> getPhotosAsync(
        @WebParam(name = "getPhotosRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getPhotosRequest")
        GetPhotosRequest getPhotosRequest);

    /**
     * 
     * @param getPhotosRequest
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getPhotos")
    public Future<?> getPhotosAsync(
        @WebParam(name = "getPhotosRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getPhotosRequest")
        GetPhotosRequest getPhotosRequest,
        @WebParam(name = "getPhotosResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<GetPhotosResponse> asyncHandler);

    /**
     * 
     * @param getPhotosRequest
     * @return
     *     returns com.tooltwist.bsg.client.GetPhotosResponse
     */
    @WebMethod
    @WebResult(name = "getPhotosResponse", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getPhotosResponse")
    public GetPhotosResponse getPhotos(
        @WebParam(name = "getPhotosRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getPhotosRequest")
        GetPhotosRequest getPhotosRequest);

    /**
     * 
     * @param getAerialMapRequest
     * @return
     *     returns javax.xml.ws.Response<com.tooltwist.bsg.client.GetAerialMapResponse>
     */
    @WebMethod(operationName = "getAerialMap")
    public Response<GetAerialMapResponse> getAerialMapAsync(
        @WebParam(name = "getAerialMapRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getAerialMapRequest")
        GetAerialMapRequest getAerialMapRequest);

    /**
     * 
     * @param getAerialMapRequest
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getAerialMap")
    public Future<?> getAerialMapAsync(
        @WebParam(name = "getAerialMapRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getAerialMapRequest")
        GetAerialMapRequest getAerialMapRequest,
        @WebParam(name = "getAerialMapResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<GetAerialMapResponse> asyncHandler);

    /**
     * 
     * @param getAerialMapRequest
     * @return
     *     returns com.tooltwist.bsg.client.GetAerialMapResponse
     */
    @WebMethod
    @WebResult(name = "getAerialMapResponse", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getAerialMapResponse")
    public GetAerialMapResponse getAerialMap(
        @WebParam(name = "getAerialMapRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getAerialMapRequest")
        GetAerialMapRequest getAerialMapRequest);

    /**
     * 
     * @param getStreetMapRequest
     * @return
     *     returns javax.xml.ws.Response<com.tooltwist.bsg.client.GetStreetMapResponse>
     */
    @WebMethod(operationName = "getStreetMap")
    public Response<GetStreetMapResponse> getStreetMapAsync(
        @WebParam(name = "getStreetMapRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getStreetMapRequest")
        GetStreetMapRequest getStreetMapRequest);

    /**
     * 
     * @param getStreetMapRequest
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getStreetMap")
    public Future<?> getStreetMapAsync(
        @WebParam(name = "getStreetMapRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getStreetMapRequest")
        GetStreetMapRequest getStreetMapRequest,
        @WebParam(name = "getStreetMapResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<GetStreetMapResponse> asyncHandler);

    /**
     * 
     * @param getStreetMapRequest
     * @return
     *     returns com.tooltwist.bsg.client.GetStreetMapResponse
     */
    @WebMethod
    @WebResult(name = "getStreetMapResponse", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getStreetMapResponse")
    public GetStreetMapResponse getStreetMap(
        @WebParam(name = "getStreetMapRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getStreetMapRequest")
        GetStreetMapRequest getStreetMapRequest);

    /**
     * 
     * @param getTopoMapRequest
     * @return
     *     returns javax.xml.ws.Response<com.tooltwist.bsg.client.GetTopoMapResponse>
     */
    @WebMethod(operationName = "getTopoMap")
    public Response<GetTopoMapResponse> getTopoMapAsync(
        @WebParam(name = "getTopoMapRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getTopoMapRequest")
        GetTopoMapRequest getTopoMapRequest);

    /**
     * 
     * @param asyncHandler
     * @param getTopoMapRequest
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getTopoMap")
    public Future<?> getTopoMapAsync(
        @WebParam(name = "getTopoMapRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getTopoMapRequest")
        GetTopoMapRequest getTopoMapRequest,
        @WebParam(name = "getTopoMapResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<GetTopoMapResponse> asyncHandler);

    /**
     * 
     * @param getTopoMapRequest
     * @return
     *     returns com.tooltwist.bsg.client.GetTopoMapResponse
     */
    @WebMethod
    @WebResult(name = "getTopoMapResponse", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getTopoMapResponse")
    public GetTopoMapResponse getTopoMap(
        @WebParam(name = "getTopoMapRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getTopoMapRequest")
        GetTopoMapRequest getTopoMapRequest);

    /**
     * 
     * @param getAreaMapRequest
     * @return
     *     returns javax.xml.ws.Response<com.tooltwist.bsg.client.GetAreaMapResponse>
     */
    @WebMethod(operationName = "getAreaMap")
    public Response<GetAreaMapResponse> getAreaMapAsync(
        @WebParam(name = "getAreaMapRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getAreaMapRequest")
        GetAreaMapRequest getAreaMapRequest);

    /**
     * 
     * @param getAreaMapRequest
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getAreaMap")
    public Future<?> getAreaMapAsync(
        @WebParam(name = "getAreaMapRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getAreaMapRequest")
        GetAreaMapRequest getAreaMapRequest,
        @WebParam(name = "getAreaMapResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<GetAreaMapResponse> asyncHandler);

    /**
     * 
     * @param getAreaMapRequest
     * @return
     *     returns com.tooltwist.bsg.client.GetAreaMapResponse
     */
    @WebMethod
    @WebResult(name = "getAreaMapResponse", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getAreaMapResponse")
    public GetAreaMapResponse getAreaMap(
        @WebParam(name = "getAreaMapRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getAreaMapRequest")
        GetAreaMapRequest getAreaMapRequest);

}
