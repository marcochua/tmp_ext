
package com.tooltwist.bsg.client;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.Response;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6b21 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "propertySearchService", targetNamespace = "http://rpdata.com/bsg/schemas")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PropertySearchService {


    /**
     * 
     * @param searchRequest
     * @return
     *     returns javax.xml.ws.Response<com.tooltwist.bsg.client.SearchResponse>
     */
    @WebMethod(operationName = "search")
    public Response<SearchResponse> searchAsync(
        @WebParam(name = "searchRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "searchRequest")
        SearchRequest searchRequest);

    /**
     * 
     * @param searchRequest
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "search")
    public Future<?> searchAsync(
        @WebParam(name = "searchRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "searchRequest")
        SearchRequest searchRequest,
        @WebParam(name = "searchResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<SearchResponse> asyncHandler);

    /**
     * 
     * @param searchRequest
     * @return
     *     returns com.tooltwist.bsg.client.SearchResponse
     */
    @WebMethod
    @WebResult(name = "searchResponse", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "searchResponse")
    public SearchResponse search(
        @WebParam(name = "searchRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "searchRequest")
        SearchRequest searchRequest);

    /**
     * 
     * @param getFuzzyAddressMatchRequest
     * @return
     *     returns javax.xml.ws.Response<com.tooltwist.bsg.client.GetFuzzyAddressMatchResponse>
     */
    @WebMethod(operationName = "getFuzzyAddressMatch")
    public Response<GetFuzzyAddressMatchResponse> getFuzzyAddressMatchAsync(
        @WebParam(name = "getFuzzyAddressMatchRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getFuzzyAddressMatchRequest")
        GetFuzzyAddressMatchRequest getFuzzyAddressMatchRequest);

    /**
     * 
     * @param getFuzzyAddressMatchRequest
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getFuzzyAddressMatch")
    public Future<?> getFuzzyAddressMatchAsync(
        @WebParam(name = "getFuzzyAddressMatchRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getFuzzyAddressMatchRequest")
        GetFuzzyAddressMatchRequest getFuzzyAddressMatchRequest,
        @WebParam(name = "getFuzzyAddressMatchResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<GetFuzzyAddressMatchResponse> asyncHandler);

    /**
     * 
     * @param getFuzzyAddressMatchRequest
     * @return
     *     returns com.tooltwist.bsg.client.GetFuzzyAddressMatchResponse
     */
    @WebMethod
    @WebResult(name = "getFuzzyAddressMatchResponse", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getFuzzyAddressMatchResponse")
    public GetFuzzyAddressMatchResponse getFuzzyAddressMatch(
        @WebParam(name = "getFuzzyAddressMatchRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getFuzzyAddressMatchRequest")
        GetFuzzyAddressMatchRequest getFuzzyAddressMatchRequest);

    /**
     * 
     * @param getPropertyMatchRequest
     * @return
     *     returns javax.xml.ws.Response<com.tooltwist.bsg.client.GetPropertyMatchResponse>
     */
    @WebMethod(operationName = "getPropertyMatch")
    public Response<GetPropertyMatchResponse> getPropertyMatchAsync(
        @WebParam(name = "getPropertyMatchRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getPropertyMatchRequest")
        GetPropertyMatchRequest getPropertyMatchRequest);

    /**
     * 
     * @param asyncHandler
     * @param getPropertyMatchRequest
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getPropertyMatch")
    public Future<?> getPropertyMatchAsync(
        @WebParam(name = "getPropertyMatchRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getPropertyMatchRequest")
        GetPropertyMatchRequest getPropertyMatchRequest,
        @WebParam(name = "getPropertyMatchResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<GetPropertyMatchResponse> asyncHandler);

    /**
     * 
     * @param getPropertyMatchRequest
     * @return
     *     returns com.tooltwist.bsg.client.GetPropertyMatchResponse
     */
    @WebMethod
    @WebResult(name = "getPropertyMatchResponse", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getPropertyMatchResponse")
    public GetPropertyMatchResponse getPropertyMatch(
        @WebParam(name = "getPropertyMatchRequest", targetNamespace = "http://rpdata.com/bsg/schemas", partName = "getPropertyMatchRequest")
        GetPropertyMatchRequest getPropertyMatchRequest);

}
